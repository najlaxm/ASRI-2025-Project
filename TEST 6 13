{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["nyTpt4d_myoe"],"mount_file_id":"1QzK6gwJC-aLaqKaD1xGPlENWAyePcJAF","authorship_tag":"ABX9TyNmmej/KNKFL+iKn1PPBBlW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# ***IMPORTING***"],"metadata":{"id":"_qQza6dJ7ax1"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load the datasets\n","df = pd.read_excel('/content/drive/MyDrive/ASRI/MERGEDDATA.xlsx')\n","\n","#df.head()"],"metadata":{"id":"mWrvT9cSUsSz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***ANOVA***\n"],"metadata":{"id":"B9B8CrIY8YJU"}},{"cell_type":"code","source":["import statsmodels.api as sm\n","from statsmodels.formula.api import ols\n","\n","# Fit the model\n","model = ols('EstimatedDisabilityCount ~ C(RUCC_2023)', data=df).fit()\n","\n","# Perform ANOVA\n","anova_table = sm.stats.anova_lm(model, typ=2)\n","print(anova_table)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bx03roQm8Yp_","executionInfo":{"status":"ok","timestamp":1749850037653,"user_tz":240,"elapsed":3194,"user":{"displayName":"Najla Muhammad","userId":"01766738991136488318"}},"outputId":"230f1dd0-c0d1-4b27-daed-d72303fcdc7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                    sum_sq       df          F         PR(>F)\n","C(RUCC_2023)  1.779257e+08      8.0  75.369488  1.566072e-124\n","Residual      2.464378e+10  83513.0        NaN            NaN\n"]}]},{"cell_type":"markdown","source":["# ***VISUALIZATIONS***"],"metadata":{"id":"JLxGRbCXAF53"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Group by RUCC_2023 and sum both columns\n","grouped = df.groupby('RUCC_2023').agg(\n","    Total_Disability_Count=('EstimatedDisabilityCount', 'sum'),\n","    Total_Population=('TotalPopulation', 'sum')\n",").reset_index()\n","\n","# Calculate prevalence (as a percentage)\n","grouped['Prevalence'] = (grouped['Total_Disability_Count'] / grouped['Total_Population']) * 100\n","\n","# Map RUCC codes to labels as before\n","rucc_labels = {\n","    1: 'Metro 1M+',\n","    2: 'Metro 250K-1M',\n","    3: 'Metro <250K',\n","    4: 'Nonmetro 20K+, adjacent',\n","    5: 'Nonmetro 20K+, not adj',\n","    6: 'Nonmetro 2.5-20K, adjacent',\n","    7: 'Nonmetro 2.5-20K, not adj',\n","    8: 'Nonmetro Rural, adjacent',\n","    9: 'Nonmetro Rural, not adj'\n","}\n","grouped['County_Type'] = grouped['RUCC_2023'].map(rucc_labels)\n"],"metadata":{"id":"QEPOdzbUAIkR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","from matplotlib import rcParams\n","rcParams['axes.titlepad'] = 20\n","\n","grouped_sorted = grouped.sort_values('Prevalence', ascending=True)\n","\n","plt.rcParams['figure.dpi'] = 100\n","plt.figure(figsize=(8, 6))\n","ax = sns.barplot(\n","    x='County_Type',\n","    y='Prevalence',\n","    data=grouped,\n","    order=grouped_sorted['County_Type'],  # Order\n","    palette=['#ffc800', '#f6992d', '#ed6a5a', '#a75a5a', '#60495a', '#4c7680', '#38a3a5', '#7dba60', '#c2d11b'],\n","    errorbar=None,\n","    width=.8\n",")\n","plt.title('How Disability Prevalence Varies by County Classification', color='#4f4e4e')\n","plt.xlabel('County Types', color='#4f4e4e', size=9.5)\n","plt.ylabel('Disability Prevalence (%)', color='#4f4e4e', size=9.5)\n","plt.xticks(rotation=45, ha='right', size=8, color='#4f4e4e')\n","plt.yticks(size=9, color='#4f4e4e')\n","plt.tight_layout()\n","\n","\n","# Add values on top of bars\n","for p in ax.patches:\n","    ax.text(\n","        p.get_x() + p.get_width() / 2.,\n","        p.get_height() + 0.1,\n","        f'{p.get_height():.1f}%',\n","        ha='center',\n","        va='bottom',\n","        color='#4f4e4e',\n","        size=9\n","    )\n","\n","sns.despine();\n","\n","plt.show()"],"metadata":{"id":"NsCyrLQVc3Uu"},"execution_count":null,"outputs":[]}]}